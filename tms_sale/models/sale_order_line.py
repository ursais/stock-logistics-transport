# Copyright (C) 2019 Open Source Integrators
# License AGPL-3.0 or later (http://www.gnu.org/licenses/agpl).
from odoo import api, fields, models


class SaleOrderLine(models.Model):
    _inherit = "sale.order.line"

    tms_order_id = fields.Many2one(
        "tms.order",
        "Order",
        index=True,
        copy=False,
        help="Transport Order generated by the sales order item",
    )

    tms_factor_type = fields.Selection(
        related="product_id.tms_factor_type", readonly=True
    )
    tms_factor = fields.Float()

    def _convert_to_tax_base_line_dict(self, **kwargs):
        """Convert the current record to a dictionary in
        order to use the generic taxes computation method
        defined on account.tax.

        :return: A python dictionary.
        """
        self.ensure_one()
        return self.env["account.tax"]._convert_to_tax_base_line_dict(
            self,
            partner=self.order_id.partner_id,
            currency=self.order_id.currency_id,
            product=self.product_id,
            taxes=self.tax_id,
            price_unit=self.price_unit,
            quantity=self.product_uom_qty * self.tms_factor,
            discount=self.discount,
            price_subtotal=self.price_subtotal,
            **kwargs,
        )

    @api.depends("product_uom_qty", "discount", "price_unit", "tax_id", "tms_factor")
    def _compute_amount(self):
        return super()._compute_amount()
